/**
[반복 회수를 구하기 위한 연산]
1. 원소가 5개일 경우 반복 회수 : 2회
    - 5/2를 연산한다. 연산 결과를 parseInt() 명령을 통해 나머지를 버릴 수 있다. 2나머지 5->2
2. 원소가 6개일 경우 반복 회수 : 3회
    - 6/2를 연산한다.

    => 즉 배열의 길이/2 만큼 반복 처리

[반대쪽 위치의 원소 구하기]
=> 배열의 길이 -i-1
 */

const data = [1,5,2,4,3];
console.log(data);

// 반복 횟수 -> 2로 나누고 나머지에 해당하는 부분을 버린다.
// 나머지에 해당하는 부분을 버림 --> 가운데 위치의 항목을 이동하지 않음 "2"
const p = parseInt(data.length/ 2); //parseInt        //2.5 를 0.5만 버리고 2만취해서 p에 넣어준다.


for (let i = 0; i < p; i ++) {    // i가 2보다 작다 0,1 두번 반복
    // 반대쪽 원소의 위치    하게 하려면 새로운 변수를 위치 해야함.
    const k = data.length - i -1;  // i(index)를 빼고 -1을 더 빼면 반대쪽 결과가 출력됨.
     //k에 4,3 저장 
    // i 번째 원소와 k번째 원소의 교환
    const tmp = data[i];
    data[i] = data[k];
    data[k] = tmp;                          // data에 length가 5고 
}                                         //    1 5 2 4 3          
                                        // 인덱스 번호로 0 1 2 3 4
console.log(data);